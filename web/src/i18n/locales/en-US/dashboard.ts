const translation = {
  pages: {
    title: "Dashboards",
    description: "Manage and create dashboards for your project.",
  },
  actions: {
    newDashboard: "New dashboard",
    created: "Dashboard created successfully",
    createdDescription: "Your dashboard has been created.",
    updated: "Dashboard updated",
    updatedDescription: "Your changes have been saved automatically",
    filtersSaved: "Filters saved",
    filtersSavedDescription: "Dashboard filters have been saved successfully",
    cloned: "Dashboard cloned",
    clonedDescription: "The dashboard has been cloned successfully",
    configureTracing: "Configure Tracing",
  },
  form: {
    namePlaceholder: "Dashboard name",
    descriptionPlaceholder: "Dashboard description",
  },
  errors: {
    createError: "Error creating dashboard",
    updateFailed: "Error updating dashboard",
    filtersSaveFailed: "Error saving filters",
    cloneFailed: "Failed to clone dashboard",
    projectIdMissing: "Project ID is missing",
    validationError: "Validation error",
    nameRequired: "Dashboard name is required",
  },
  filters: {
    traceName: "Trace Name",
    observationName: "Observation Name",
    scoreName: "Score Name",
    release: "Release",
    filters: "Filters",
    past: "Past",
    past24Hours: "Past 24 hours",
    past7Days: "Past 7 days",
    past30Days: "Past 30 days",
    past90Days: "Past 90 days",
    timeRangeNotAvailable: "This time range is not available in your current plan.",
  },
  modelLatencies: {
    title: "Model latencies",
    subtitle: "Latencies (seconds) per LLM generation",
    percentiles: {
      p50: "50th Percentile",
      p75: "75th Percentile",
      p90: "90th Percentile",
      p95: "95th Percentile",
      p99: "99th Percentile",
    },
    allModels: "All models",
    noData: "No data",
  },
  support: {
    askAI: "Ask AI",
    chat: "Chat",
    contactSupport: "Contact Support",
    githubSupport: "GitHub Support",
    discord: "Discord",
    docs: "Docs",
    statusPage: "Status Page",
    feedback: "Feedback",
    featureRequest: "Feature Request",
    reportBug: "Report a Bug",
  },
  table: {},
  create: {
    title: "Create Dashboard",
    description: "Create a new dashboard for your project",
  },
  hints: {
    afterCreatingDashboard: "After creating the dashboard, you can add widgets to visualize your data.",
  },
  detail: {
    defaultTitle: "Dashboard",
    langfuseMaintained: " (Langfuse Maintained)",
    noDescriptionAvailable: "No description available",
    saveFilters: "Save Filters",
    addWidget: "Add Widget",
  },
  home: {
    title: "Home",
    requestChart: "Request Chart",
    requestChartDescription: "Your feedback matters! Let the Langfuse team know what additional data or metrics you'd like to see in your dashboard.",
  },
  latencyTables: {
    traceLatencyPercentiles: "Trace latency percentiles",
    generationLatencyPercentiles: "Generation latency percentiles",
    spanLatencyPercentiles: "Span latency percentiles",
    traceName: "Trace Name",
    generationName: "Generation Name",
    spanName: "Span Name",
  },
  scoreAnalytics: {
    title: "Scores Analytics",
    description: "Aggregate scores and averages over time",
    searchScore: "Search score...",
    totalAggregateScores: "Total aggregate scores",
    aggregateDescription: "Aggregate of up to 10,000 scores",
    movingAverageOverTime: "Moving average over time",
    scoresOverTime: "Scores over time",
    selectScoreToViewAnalytics: "Select a score to view analytics",
  },
  modelUsageChart: {
    title: "Model Usage",
    costByModel: "Cost by model",
    costByType: "Cost by type",
    unitsByModel: "Units by model",
    unitsByType: "Units by type",
    cost: "Cost",
    units: "Units",
  },
  cards: {
    traces: {
      title: "Traces",
      description: "Total traces tracked",
    },
    modelCosts: {
      title: "Model costs",
      description: "Total cost",
      model: "Model",
      tokens: "Tokens",
      usd: "USD",
    },
    scores: {
      title: "Scores",
      description: "Total scores tracked",
      name: "Name",
      avg: "Avg",
    },
    tracesByTime: {
      title: "Traces by time",
      traces: "Traces",
      observationsByLevel: "Observations by Level",
      tracesTracked: "Traces tracked",
      observationsTracked: "Observations tracked",
    },
    allModels: "All models",
    userConsumption: {
      title: "User consumption",
      tokenCost: "Token cost",
      countOfTraces: "Count of Traces",
      totalCost: "Total cost",
      totalTraces: "Total traces",
    },
  },
};

export default translation;
