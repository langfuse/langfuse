const translation = {
  slack: {
    testMessage: {
      sendTestMessage: "发送测试消息",
      sending: "发送中...",
      sent: "测试消息已发送",
      sentDescription: "测试消息已成功发送到所选频道。",
      failedToSend: "发送测试消息失败",
    },
    connect: {
      connectSlack: "连接 Slack",
      connecting: "连接中...",
      connected: "Slack 已连接",
      connectedDescription: "已成功连接到 {{teamName}}。",
      connectionFailed: "连接失败",
      installUrlNotAvailable: "安装 URL 不可用。请重试。",
      popupBlocked: "弹窗被阻止。请允许弹窗并重试。",
      failedToConnect: "连接 Slack 失败",
    },
    disconnect: {
      disconnect: "断开连接",
      disconnecting: "断开连接中...",
      disconnected: "Slack 已断开连接",
      disconnectedDescription: "已成功从您的 Slack 工作区断开连接。",
      disconnectionFailed: "断开连接失败",
      failedToDisconnect: "断开 Slack 连接失败",
      dialogTitle: "断开 Slack 集成",
      confirmationMessage: "您确定要将 Slack 工作区从此项目中断开连接吗？",
      thisWill: "这将：",
      removeBot: "从您的 Slack 工作区中移除机器人",
      disableAutomations: "禁用所有现有的 Slack 自动化",
      stopNotifications: "停止所有未来的 Slack 通知",
      deleteCredentials: "删除存储的工作区凭据",
      reconnectNote: "您可以随时重新连接，但需要重新配置您的自动化。",
    },
  },
  types: {
    webhook: "Webhook",
    slack: "Slack",
    annotationQueue: "注释队列",
  },
  form: {
    permissionDenied: "权限被拒绝",
    permissionDeniedDescription: "您没有修改自动化的权限。",
    validationError: "验证错误",
    validationErrorDescription: "请填写所有必填字段",
    automationUpdated: "自动化已更新",
    automationUpdatedDescription: '成功更新自动化 "{{name}}"。',
    automationCreated: "自动化已创建",
    automationCreatedDescription: '成功创建自动化 "{{name}}"。',
    updateAutomation: "更新自动化",
    saveAutomation: "保存自动化",
  },
  actions: {
    slackAction: {
      channel: "频道",
      selectChannel: "选择频道",
      channelDescription: "选择将发送通知的 Slack 频道。",
      testChannel: "测试频道",
      testChannelDescription: "测试此频道以验证机器人是否可以发送消息。",
    },
    webhookAction: {
      urlRequired: "Webhook URL 是必需的",
      webhookUrl: "Webhook URL",
      urlDescription: "触发时调用的 HTTP URL。我们将向此 URL 发送 POST 请求。出于安全考虑，只允许 HTTPS URL。",
      apiVersion: "API 版本",
      selectApiVersion: "选择 API 版本",
      apiVersionDescription: "当触发提示事件时用于 webhook 负载格式的 API 版本。",
      headers: "请求头",
      defaultHeadersDescription: "默认请求头（由 Langfuse 自动添加）：",
      customHeadersDescription: "要在 webhook 请求中包含的可选自定义请求头：",
      headerName: "请求头名称",
      headerValue: "值",
      makeHeaderPublic: "使请求头公开",
      makeHeaderSecret: "使请求头保密",
      addCustomHeader: "添加自定义请求头",
      webhookSecret: "Webhook 密钥",
      webhookSecretDescription: "使用此密钥验证 webhook 签名以确保安全。密钥会自动包含在 x-langfuse-signature 请求头中。",
      secretEncryptedNote: "密钥已加密，只能在生成或重新生成时查看",
      secretWillBeGenerated: "创建自动化时将生成 Webhook 密钥。",
    },
  },
  success: {
    webhookSecretRegenerated: "Webhook 密钥已重新生成",
    webhookSecretRegeneratedDescription: "您的 Webhook 密钥已成功重新生成。",
  },
  formLabels: {
    eventActions: "事件操作",
    actions: "操作",
  },
};

export default translation;
