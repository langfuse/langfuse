openapi: 3.0.1
info:
  title: langfuse
  version: ''
  description: >-
    ## General Notes


    This admin API is only available on self-hosted instances, not on Langfuse
    Cloud.

    An administrator must set the `ADMIN_API_KEY` environment variable to use
    this API.


    ## Authentication


    Authenticate with the API by setting the Authorization header to `Bearer
    $ADMIN_API_KEY` where

    `$ADMIN_API_KEY` is the API key set via the container environment.


    ## Exports


    - OpenAPI spec:
    https://cloud.langfuse.com/generated/organizations-api/openapi.yml

    - Postman collection:
    https://cloud.langfuse.com/generated/organizations-postman/collection.json
paths:
  /api/admin/organizations:
    get:
      description: Get all organizations
      operationId: organizations_getAll
      tags:
        - Organizations
      parameters: []
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Organizations'
        '400':
          description: ''
          content:
            application/json:
              schema:
                type: string
        '401':
          description: ''
          content:
            application/json:
              schema:
                type: string
        '403':
          description: ''
          content:
            application/json:
              schema:
                type: string
        '405':
          description: ''
          content:
            application/json:
              schema:
                type: string
      security: &ref_0
        - BearerAuth: []
    post:
      description: Create a new organization
      operationId: organizations_create
      tags:
        - Organizations
      parameters: []
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Organization'
        '400':
          description: ''
          content:
            application/json:
              schema:
                type: string
        '401':
          description: ''
          content:
            application/json:
              schema:
                type: string
        '403':
          description: ''
          content:
            application/json:
              schema:
                type: string
        '405':
          description: ''
          content:
            application/json:
              schema:
                type: string
      security: *ref_0
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
              required:
                - name
  /api/admin/organizations/{organizationId}:
    get:
      description: Get organization by ID
      operationId: organizations_getById
      tags:
        - Organizations
      parameters:
        - name: organizationId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Organization'
        '400':
          description: ''
          content:
            application/json:
              schema:
                type: string
        '401':
          description: ''
          content:
            application/json:
              schema:
                type: string
        '403':
          description: ''
          content:
            application/json:
              schema:
                type: string
        '405':
          description: ''
          content:
            application/json:
              schema:
                type: string
      security: *ref_0
    put:
      description: Update an organization
      operationId: organizations_update
      tags:
        - Organizations
      parameters:
        - name: organizationId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Organization'
        '400':
          description: ''
          content:
            application/json:
              schema:
                type: string
        '401':
          description: ''
          content:
            application/json:
              schema:
                type: string
        '403':
          description: ''
          content:
            application/json:
              schema:
                type: string
        '405':
          description: ''
          content:
            application/json:
              schema:
                type: string
      security: *ref_0
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
              required:
                - name
    delete:
      description: Delete an organization
      operationId: organizations_delete
      tags:
        - Organizations
      parameters:
        - name: organizationId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteOrganizationResponse'
        '400':
          description: ''
          content:
            application/json:
              schema:
                type: string
        '401':
          description: ''
          content:
            application/json:
              schema:
                type: string
        '403':
          description: ''
          content:
            application/json:
              schema:
                type: string
        '405':
          description: ''
          content:
            application/json:
              schema:
                type: string
      security: *ref_0
components:
  schemas:
    Organizations:
      title: Organizations
      type: object
      description: List of organizations
      properties:
        organizations:
          type: array
          items:
            $ref: '#/components/schemas/Organization'
      required:
        - organizations
    Organization:
      title: Organization
      type: object
      description: Organization object
      properties:
        id:
          type: string
        name:
          type: string
        createdAt:
          type: string
          format: date-time
      required:
        - id
        - name
        - createdAt
    DeleteOrganizationResponse:
      title: DeleteOrganizationResponse
      type: object
      description: Response for successful organization deletion
      properties:
        success:
          type: boolean
      required:
        - success
  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
