types:
  # Objects
  Trace:
    properties:
      id:
        type: string
        docs: The unique identifier of a trace
      timestamp: datetime
      name: optional<string>
      input: optional<unknown>
      output: optional<unknown>
      sessionId: optional<string>
      release: optional<string>
      version: optional<string>
      userId: optional<string>
      metadata: optional<unknown>
      tags: optional<list<string>>
      public:
        type: optional<boolean>
        docs: Public traces are accessible via url without login
  TraceWithDetails: # GET /traces
    extends: Trace
    properties:
      htmlPath:
        type: string
        docs: Path of trace in Langfuse UI
      latency:
        type: double
        docs: Latency of trace in seconds
      totalCost:
        type: double
        docs: Cost of trace in USD
      observations:
        type: list<string>
        docs: List of observation ids
      scores:
        type: list<string>
        docs: List of score ids
  TraceWithFullDetails: # GET traces/[traceID]
    extends: Trace
    properties:
      htmlPath:
        type: string
        docs: Path of trace in Langfuse UI
      totalCost:
        type: double
        docs: Cost of trace in USD
      observations: list<ObservationsView>
      scores: list<Score>
  Session:
    properties:
      id: string
      createdAt: datetime
      projectId: string
  SessionWithTraces:
    extends: Session
    properties:
      traces: list<Trace>
  Observation:
    properties:
      id: string
      traceId: optional<string>
      type: string
      name: optional<string>
      startTime: datetime
      endTime: optional<datetime>
      completionStartTime: optional<datetime>
      model: optional<string>
      modelParameters: optional<map<string, MapValue>>
      input: optional<unknown>
      version: optional<string>
      metadata: optional<unknown>
      output: optional<unknown>
      usage: optional<Usage>
      level: ObservationLevel
      statusMessage: optional<string>
      parentObservationId: optional<string>
      promptId: optional<string>

  ObservationsView:
    extends: Observation
    properties:
      modelId: optional<string>
      inputPrice: optional<double>
      outputPrice: optional<double>
      totalPrice: optional<double>
      calculatedInputCost: optional<double>
      calculatedOutputCost: optional<double>
      calculatedTotalCost: optional<double>
      latency: optional<double>

  Usage:
    docs: Standard interface for usage and cost
    properties:
      input:
        docs: Number of input units (e.g. tokens)
        type: optional<integer>
      output:
        docs: Number of output units (e.g. tokens)
        type: optional<integer>
      total:
        docs: Defaults to input+output if not set
        type: optional<integer>
      unit: optional<ModelUsageUnit>
      inputCost:
        docs: USD input cost
        type: optional<double>
      outputCost:
        docs: USD output cost
        type: optional<double>
      totalCost:
        docs: USD total cost, defaults to input+output
        type: optional<double>
  ScoreConfig:
    docs: Configuration for a score
    properties:
      id: string
      name: string
      createdAt: datetime
      updatedAt: datetime
      projectId: string
      dataType: ScoreDataType
      isArchived:
        type: boolean
        docs: Whether the score config is archived. Defaults to false
      minValue:
        type: optional<double>
        docs: Sets minimum value for numerical scores. If not set, the minimum value defaults to -∞
      maxValue:
        type: optional<double>
        docs: Sets maximum value for numerical scores. If not set, the maximum value defaults to +∞
      categories:
        type: optional<list<ConfigCategory>>
        docs: Configures custom categories for categorical scores
      description: optional<string>
  ConfigCategory:
    properties:
      value: double
      label: string
  BaseScore:
    properties:
      id: string
      traceId: string
      name: string
      source: ScoreSource
      observationId: optional<string>
      timestamp: datetime
      createdAt: datetime
      updatedAt: datetime
      authorUserId: optional<string>
      comment: optional<string>
      configId:
        type: optional<string>
        docs: Reference a score config on a score. When set, config and score name must be equal and value must comply to optionally defined numerical range
  NumericScore:
    extends: BaseScore
    properties:
      value:
        type: double
        docs: The numeric value of the score
  BooleanScore:
    extends: BaseScore
    properties:
      value:
        type: double
        docs: The numeric value of the score. Equals 1 for "True" and 0 for "False"
      stringValue:
        type: string
        docs: The string representation of the score value. Is inferred from the numeric value and equals "True" or "False"
  CategoricalScore:
    extends: BaseScore
    properties:
      value:
        type: optional<double>
        docs: Only defined if a config is linked. Represents the numeric category mapping of the stringValue
      stringValue:
        type: string
        docs: The string representation of the score value. If no config is linked, can be any string. Otherwise, must map to a config category
  Score:
    discriminant: "dataType"
    union:
      NUMERIC:
        type: NumericScore
        docs: "Score with NUMERIC data type"
      CATEGORICAL:
        type: CategoricalScore
        docs: "Score with CATEGORICAL data type"
      BOOLEAN:
        type: BooleanScore
        docs: "Score with BOOLEAN data type"

  CreateScoreValue:
    discriminated: false
    union:
      - string
      - double
    docs: The value of the score. Must be passed as string for categorical scores, and numeric for boolean and numeric scores
  Dataset:
    properties:
      id: string
      name: string
      description: optional<string>
      metadata: optional<unknown>
      projectId: string
      createdAt: datetime
      updatedAt: datetime
  DatasetItem:
    properties:
      id: string
      status: DatasetStatus
      input: optional<unknown>
      expectedOutput: optional<unknown>
      metadata: optional<unknown>
      sourceTraceId: optional<string>
      sourceObservationId: optional<string>
      datasetId: string
      datasetName: string
      createdAt: datetime
      updatedAt: datetime
  DatasetRunItem:
    properties:
      id: string
      datasetRunId: string
      datasetRunName: string
      datasetItemId: string
      traceId: string
      observationId: optional<string>
      createdAt: datetime
      updatedAt: datetime
  DatasetRun:
    properties:
      id: string
      name: string
      description: optional<string>
      metadata: optional<unknown>
      datasetId: string
      datasetName: string
      createdAt: datetime
      updatedAt: datetime
  DatasetRunWithItems:
    extends: DatasetRun
    properties:
      datasetRunItems: list<DatasetRunItem>
  Model:
    docs: Model definition used for transforming usage into USD cost and/or tokenization.
    properties:
      id: string
      modelName:
        docs: "Name of the model definition. If multiple with the same name exist, they are applied in the following order: (1) custom over built-in, (2) newest according to startTime where model.startTime<observation.startTime"
        type: string
      matchPattern:
        docs: "Regex pattern which matches this model definition to generation.model. Useful in case of fine-tuned models. If you want to exact match, use `(?i)^modelname$`"
        type: string
      startDate:
        docs: Apply only to generations which are newer than this ISO date.
        type: optional<date>
      unit:
        docs: Unit used by this model.
        type: ModelUsageUnit
      inputPrice:
        docs: Price (USD) per input unit
        type: optional<double>
      outputPrice:
        docs: Price (USD) per output unit
        type: optional<double>
      totalPrice:
        docs: Price (USD) per total unit. Cannot be set if input or output price is set.
        type: optional<double>
      tokenizerId:
        docs: Optional. Tokenizer to be applied to observations which match to this model. See docs for more details.
        type: optional<string>
      tokenizerConfig:
        docs: Optional. Configuration for the selected tokenizer. Needs to be JSON. See docs for more details.
        type: optional<unknown>
      isLangfuseManaged:
        type: boolean

  # Utilities
  ModelUsageUnit:
    docs: Unit of usage in Langfuse
    enum:
      - CHARACTERS
      - TOKENS
      - MILLISECONDS
      - SECONDS
      - IMAGES
  ObservationLevel:
    enum:
      - DEBUG
      - DEFAULT
      - WARNING
      - ERROR
  MapValue:
    discriminated: false
    union:
      - optional<string>
      - optional<integer>
      - optional<boolean>
      - optional<list<string>>
  DatasetStatus:
    enum:
      - ACTIVE
      - ARCHIVED
  ScoreSource:
    enum:
      - ANNOTATION
      - API
      - EVAL
  ScoreDataType:
    enum:
      - NUMERIC
      - BOOLEAN
      - CATEGORICAL

errors:
  Error:
    status-code: 400
    type: unknown
  UnauthorizedError:
    status-code: 401
    type: unknown
  AccessDeniedError:
    status-code: 403
    type: unknown
  NotFoundError:
    status-code: 404
    type: unknown
  MethodNotAllowedError:
    status-code: 405
    type: unknown
