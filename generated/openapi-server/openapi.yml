openapi: 3.0.1
info:
  title: langfuse
  version: ''
paths:
  /api/public/dataset-items:
    post:
      description: Create a dataset item
      operationId: datasetItems_create
      tags:
        - DatasetItems
      parameters: []
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DatasetItem'
        '400':
          description: ''
          content:
            application/json:
              schema:
                type: string
        '401':
          description: ''
          content:
            application/json:
              schema:
                type: string
        '403':
          description: ''
          content:
            application/json:
              schema:
                type: string
        '404':
          description: ''
          content:
            application/json:
              schema:
                type: string
        '405':
          description: ''
          content:
            application/json:
              schema:
                type: string
      security: &ref_0
        - BasicAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateDatasetItemRequest'
  /api/public/dataset-run-items:
    post:
      description: Create a dataset run item
      operationId: datasetRunItems_create
      tags:
        - DatasetRunItems
      parameters: []
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DatasetRunItem'
        '400':
          description: ''
          content:
            application/json:
              schema:
                type: string
        '401':
          description: ''
          content:
            application/json:
              schema:
                type: string
        '403':
          description: ''
          content:
            application/json:
              schema:
                type: string
        '404':
          description: ''
          content:
            application/json:
              schema:
                type: string
        '405':
          description: ''
          content:
            application/json:
              schema:
                type: string
      security: *ref_0
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateDatasetRunItemRequest'
  /api/public/datasets/{datasetName}:
    get:
      description: Get a dataset and its items
      operationId: datasets_get
      tags:
        - Datasets
      parameters:
        - name: datasetName
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Dataset'
        '400':
          description: ''
          content:
            application/json:
              schema:
                type: string
        '401':
          description: ''
          content:
            application/json:
              schema:
                type: string
        '403':
          description: ''
          content:
            application/json:
              schema:
                type: string
        '404':
          description: ''
          content:
            application/json:
              schema:
                type: string
        '405':
          description: ''
          content:
            application/json:
              schema:
                type: string
      security: *ref_0
  /api/public/datasets:
    post:
      description: Create a dataset
      operationId: datasets_create
      tags:
        - Datasets
      parameters: []
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Dataset'
        '400':
          description: ''
          content:
            application/json:
              schema:
                type: string
        '401':
          description: ''
          content:
            application/json:
              schema:
                type: string
        '403':
          description: ''
          content:
            application/json:
              schema:
                type: string
        '404':
          description: ''
          content:
            application/json:
              schema:
                type: string
        '405':
          description: ''
          content:
            application/json:
              schema:
                type: string
      security: *ref_0
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateDatasetRequest'
  /api/public/datasets/{datasetName}/runs/{runName}:
    get:
      description: Get a dataset run and its items
      operationId: datasets_getRuns
      tags:
        - Datasets
      parameters:
        - name: datasetName
          in: path
          required: true
          schema:
            type: string
        - name: runName
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DatasetRun'
        '400':
          description: ''
          content:
            application/json:
              schema:
                type: string
        '401':
          description: ''
          content:
            application/json:
              schema:
                type: string
        '403':
          description: ''
          content:
            application/json:
              schema:
                type: string
        '404':
          description: ''
          content:
            application/json:
              schema:
                type: string
        '405':
          description: ''
          content:
            application/json:
              schema:
                type: string
      security: *ref_0
  /api/public/events:
    post:
      description: Add an event to the database
      operationId: event_create
      tags:
        - Event
      parameters: []
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Observation'
        '400':
          description: ''
          content:
            application/json:
              schema:
                type: string
        '401':
          description: ''
          content:
            application/json:
              schema:
                type: string
        '403':
          description: ''
          content:
            application/json:
              schema:
                type: string
        '404':
          description: ''
          content:
            application/json:
              schema:
                type: string
        '405':
          description: ''
          content:
            application/json:
              schema:
                type: string
      security: *ref_0
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateEventRequest'
  /api/public/generations:
    post:
      operationId: generations_log
      tags:
        - Generations
      parameters: []
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Observation'
        '400':
          description: ''
          content:
            application/json:
              schema:
                type: string
        '401':
          description: ''
          content:
            application/json:
              schema:
                type: string
        '403':
          description: ''
          content:
            application/json:
              schema:
                type: string
        '404':
          description: ''
          content:
            application/json:
              schema:
                type: string
        '405':
          description: ''
          content:
            application/json:
              schema:
                type: string
      security: *ref_0
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateGenerationRequest'
    patch:
      operationId: generations_update
      tags:
        - Generations
      parameters: []
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Observation'
        '400':
          description: ''
          content:
            application/json:
              schema:
                type: string
        '401':
          description: ''
          content:
            application/json:
              schema:
                type: string
        '403':
          description: ''
          content:
            application/json:
              schema:
                type: string
        '404':
          description: ''
          content:
            application/json:
              schema:
                type: string
        '405':
          description: ''
          content:
            application/json:
              schema:
                type: string
      security: *ref_0
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateGenerationRequest'
  /api/public/health:
    get:
      description: Check health of API and database
      operationId: health_health
      tags:
        - Health
      parameters: []
      responses:
        '204':
          description: ''
        '400':
          description: ''
          content:
            application/json:
              schema:
                type: string
        '401':
          description: ''
          content:
            application/json:
              schema:
                type: string
        '403':
          description: ''
          content:
            application/json:
              schema:
                type: string
        '404':
          description: ''
          content:
            application/json:
              schema:
                type: string
        '405':
          description: ''
          content:
            application/json:
              schema:
                type: string
        '503':
          description: ''
  /api/public/ingestion:
    post:
      description: Ingest multiple events to Langfuse
      operationId: ingestion_batch
      tags:
        - Ingestion
      parameters: []
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Score'
        '400':
          description: ''
          content:
            application/json:
              schema:
                type: string
        '401':
          description: ''
          content:
            application/json:
              schema:
                type: string
        '403':
          description: ''
          content:
            application/json:
              schema:
                type: string
        '404':
          description: ''
          content:
            application/json:
              schema:
                type: string
        '405':
          description: ''
          content:
            application/json:
              schema:
                type: string
      security: *ref_0
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                batch:
                  type: array
                  items:
                    $ref: '#/components/schemas/IngestionEvent'
              required:
                - batch
  /api/public/observations/{observationId}:
    get:
      description: Get a specific observation
      operationId: observations_get
      tags:
        - Observations
      parameters:
        - name: observationId
          in: path
          description: >-
            The unique langfuse identifier of an observation, can be an event,
            span or generation
          required: true
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Observation'
        '400':
          description: ''
          content:
            application/json:
              schema:
                type: string
        '401':
          description: ''
          content:
            application/json:
              schema:
                type: string
        '403':
          description: ''
          content:
            application/json:
              schema:
                type: string
        '404':
          description: ''
          content:
            application/json:
              schema:
                type: string
        '405':
          description: ''
          content:
            application/json:
              schema:
                type: string
      security: *ref_0
  /api/public/observations:
    get:
      description: Get a list of observations
      operationId: observations_getMany
      tags:
        - Observations
      parameters:
        - name: page
          in: query
          required: false
          schema:
            type: integer
            nullable: true
        - name: limit
          in: query
          required: false
          schema:
            type: integer
            nullable: true
        - name: name
          in: query
          required: false
          schema:
            type: string
            nullable: true
        - name: userId
          in: query
          required: false
          schema:
            type: string
            nullable: true
        - name: type
          in: query
          required: false
          schema:
            type: string
            nullable: true
        - name: traceId
          in: query
          required: false
          schema:
            type: string
            nullable: true
        - name: parentObservationId
          in: query
          required: false
          schema:
            type: string
            nullable: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Observations'
        '400':
          description: ''
          content:
            application/json:
              schema:
                type: string
        '401':
          description: ''
          content:
            application/json:
              schema:
                type: string
        '403':
          description: ''
          content:
            application/json:
              schema:
                type: string
        '404':
          description: ''
          content:
            application/json:
              schema:
                type: string
        '405':
          description: ''
          content:
            application/json:
              schema:
                type: string
      security: *ref_0
  /api/public/scores:
    post:
      description: Add a score to the database, upserts on id
      operationId: score_create
      tags:
        - Score
      parameters: []
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Score'
        '400':
          description: ''
          content:
            application/json:
              schema:
                type: string
        '401':
          description: ''
          content:
            application/json:
              schema:
                type: string
        '403':
          description: ''
          content:
            application/json:
              schema:
                type: string
        '404':
          description: ''
          content:
            application/json:
              schema:
                type: string
        '405':
          description: ''
          content:
            application/json:
              schema:
                type: string
      security: *ref_0
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateScoreRequest'
    get:
      description: Get scores
      operationId: score_get
      tags:
        - Score
      parameters:
        - name: page
          in: query
          required: false
          schema:
            type: integer
            nullable: true
        - name: limit
          in: query
          required: false
          schema:
            type: integer
            nullable: true
        - name: userId
          in: query
          required: false
          schema:
            type: string
            nullable: true
        - name: name
          in: query
          required: false
          schema:
            type: string
            nullable: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Scores'
        '400':
          description: ''
          content:
            application/json:
              schema:
                type: string
        '401':
          description: ''
          content:
            application/json:
              schema:
                type: string
        '403':
          description: ''
          content:
            application/json:
              schema:
                type: string
        '404':
          description: ''
          content:
            application/json:
              schema:
                type: string
        '405':
          description: ''
          content:
            application/json:
              schema:
                type: string
      security: *ref_0
  /api/public/spans:
    post:
      description: Add a span to the database
      operationId: span_create
      tags:
        - Span
      parameters: []
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Observation'
        '400':
          description: ''
          content:
            application/json:
              schema:
                type: string
        '401':
          description: ''
          content:
            application/json:
              schema:
                type: string
        '403':
          description: ''
          content:
            application/json:
              schema:
                type: string
        '404':
          description: ''
          content:
            application/json:
              schema:
                type: string
        '405':
          description: ''
          content:
            application/json:
              schema:
                type: string
      security: *ref_0
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateSpanRequest'
    patch:
      description: Update a span to the database
      operationId: span_update
      tags:
        - Span
      parameters: []
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Observation'
        '400':
          description: ''
          content:
            application/json:
              schema:
                type: string
        '401':
          description: ''
          content:
            application/json:
              schema:
                type: string
        '403':
          description: ''
          content:
            application/json:
              schema:
                type: string
        '404':
          description: ''
          content:
            application/json:
              schema:
                type: string
        '405':
          description: ''
          content:
            application/json:
              schema:
                type: string
      security: *ref_0
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateSpanRequest'
  /api/public/traces:
    post:
      description: Add a trace to the database
      operationId: trace_create
      tags:
        - Trace
      parameters: []
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Trace'
        '400':
          description: ''
          content:
            application/json:
              schema:
                type: string
        '401':
          description: ''
          content:
            application/json:
              schema:
                type: string
        '403':
          description: ''
          content:
            application/json:
              schema:
                type: string
        '404':
          description: ''
          content:
            application/json:
              schema:
                type: string
        '405':
          description: ''
          content:
            application/json:
              schema:
                type: string
      security: *ref_0
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateTraceRequest'
    get:
      description: Get list of traces
      operationId: trace_list
      tags:
        - Trace
      parameters:
        - name: page
          in: query
          required: false
          schema:
            type: integer
            nullable: true
        - name: limit
          in: query
          required: false
          schema:
            type: integer
            nullable: true
        - name: userId
          in: query
          required: false
          schema:
            type: string
            nullable: true
        - name: name
          in: query
          required: false
          schema:
            type: string
            nullable: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Traces'
        '400':
          description: ''
          content:
            application/json:
              schema:
                type: string
        '401':
          description: ''
          content:
            application/json:
              schema:
                type: string
        '403':
          description: ''
          content:
            application/json:
              schema:
                type: string
        '404':
          description: ''
          content:
            application/json:
              schema:
                type: string
        '405':
          description: ''
          content:
            application/json:
              schema:
                type: string
      security: *ref_0
  /api/public/traces/{traceId}:
    get:
      description: Get a specific trace
      operationId: trace_get
      tags:
        - Trace
      parameters:
        - name: traceId
          in: path
          description: The unique langfuse identifier of a trace
          required: true
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TraceWithFullDetails'
        '400':
          description: ''
          content:
            application/json:
              schema:
                type: string
        '401':
          description: ''
          content:
            application/json:
              schema:
                type: string
        '403':
          description: ''
          content:
            application/json:
              schema:
                type: string
        '404':
          description: ''
          content:
            application/json:
              schema:
                type: string
        '405':
          description: ''
          content:
            application/json:
              schema:
                type: string
      security: *ref_0
components:
  schemas:
    CreateEventRequest:
      title: CreateEventRequest
      type: object
      properties:
        id:
          type: string
          nullable: true
        traceId:
          type: string
          nullable: true
        name:
          type: string
          nullable: true
        startTime:
          type: string
          format: date-time
          nullable: true
        metadata:
          nullable: true
        input:
          nullable: true
        output:
          nullable: true
        level:
          $ref: '#/components/schemas/ObservationLevel'
          nullable: true
        statusMessage:
          type: string
          nullable: true
        parentObservationId:
          type: string
          nullable: true
        version:
          type: string
          nullable: true
    CreateSpanRequest:
      title: CreateSpanRequest
      type: object
      properties:
        endTime:
          type: string
          format: date-time
          nullable: true
      allOf:
        - $ref: '#/components/schemas/CreateEventRequest'
    CreateGenerationRequest:
      title: CreateGenerationRequest
      type: object
      properties:
        completionStartTime:
          type: string
          format: date-time
          nullable: true
        model:
          type: string
          nullable: true
        modelParameters:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/MapValue'
          nullable: true
        prompt:
          nullable: true
        completion:
          nullable: true
        usage:
          $ref: '#/components/schemas/LLMUsage'
          nullable: true
      allOf:
        - $ref: '#/components/schemas/CreateSpanRequest'
    Trace:
      title: Trace
      type: object
      properties:
        id:
          type: string
          description: The unique identifier of a trace
        timestamp:
          type: string
          format: date-time
        name:
          type: string
          nullable: true
        release:
          type: string
          nullable: true
        version:
          type: string
          nullable: true
        userId:
          type: string
          nullable: true
        metadata:
          nullable: true
      required:
        - id
        - timestamp
    TraceWithDetails:
      title: TraceWithDetails
      type: object
      properties:
        observations:
          type: array
          items:
            type: string
          description: List of observation ids
        scores:
          type: array
          items:
            type: string
          description: List of score ids
      required:
        - observations
        - scores
      allOf:
        - $ref: '#/components/schemas/Trace'
    TraceWithFullDetails:
      title: TraceWithFullDetails
      type: object
      properties:
        observations:
          type: array
          items:
            $ref: '#/components/schemas/Observation'
        scores:
          type: array
          items:
            $ref: '#/components/schemas/Score'
      required:
        - observations
        - scores
      allOf:
        - $ref: '#/components/schemas/Trace'
    Observation:
      title: Observation
      type: object
      properties:
        id:
          type: string
        traceId:
          type: string
          nullable: true
        type:
          type: string
        name:
          type: string
          nullable: true
        startTime:
          type: string
          format: date-time
        endTime:
          type: string
          format: date-time
          nullable: true
        completionStartTime:
          type: string
          format: date-time
          nullable: true
        model:
          type: string
          nullable: true
        modelParameters:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/MapValue'
          nullable: true
        input:
          nullable: true
        version:
          type: string
          nullable: true
        metadata:
          nullable: true
        output:
          nullable: true
        promptTokens:
          type: integer
        completionTokens:
          type: integer
        totalTokens:
          type: integer
        level:
          $ref: '#/components/schemas/ObservationLevel'
        statusMessage:
          type: string
          nullable: true
        parentObservationId:
          type: string
          nullable: true
      required:
        - id
        - type
        - startTime
        - promptTokens
        - completionTokens
        - totalTokens
        - level
    Score:
      title: Score
      type: object
      properties:
        id:
          type: string
        traceId:
          type: string
        name:
          type: string
        value:
          type: number
          format: double
        observationId:
          type: string
          nullable: true
        timestamp:
          type: string
          format: date-time
        comment:
          type: string
          nullable: true
      required:
        - id
        - traceId
        - name
        - value
        - timestamp
    Dataset:
      title: Dataset
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        status:
          $ref: '#/components/schemas/DatasetStatus'
        projectId:
          type: string
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
        items:
          type: array
          items:
            $ref: '#/components/schemas/DatasetItem'
        runs:
          type: array
          items:
            type: string
      required:
        - id
        - name
        - status
        - projectId
        - createdAt
        - updatedAt
        - items
        - runs
    DatasetItem:
      title: DatasetItem
      type: object
      properties:
        id:
          type: string
        status:
          $ref: '#/components/schemas/DatasetStatus'
        input: {}
        expectedOutput:
          nullable: true
        sourceObservationId:
          type: string
          nullable: true
        datasetId:
          type: string
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
      required:
        - id
        - status
        - input
        - datasetId
        - createdAt
        - updatedAt
    DatasetRunItem:
      title: DatasetRunItem
      type: object
      properties:
        id:
          type: string
        datasetRunId:
          type: string
        datasetItemId:
          type: string
        observationId:
          type: string
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
      required:
        - id
        - datasetRunId
        - datasetItemId
        - observationId
        - createdAt
        - updatedAt
    DatasetRun:
      title: DatasetRun
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        datasetId:
          type: string
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
        datasetRunItems:
          type: array
          items:
            $ref: '#/components/schemas/DatasetRunItem'
      required:
        - id
        - name
        - datasetId
        - createdAt
        - updatedAt
        - datasetRunItems
    ObservationLevel:
      title: ObservationLevel
      type: string
      enum:
        - DEBUG
        - DEFAULT
        - WARNING
        - ERROR
    MapValue:
      title: MapValue
      oneOf:
        - type: string
          nullable: true
        - type: integer
          nullable: true
        - type: boolean
          nullable: true
    LLMUsage:
      title: LLMUsage
      type: object
      properties:
        promptTokens:
          type: integer
          nullable: true
        completionTokens:
          type: integer
          nullable: true
        totalTokens:
          type: integer
          nullable: true
    DatasetStatus:
      title: DatasetStatus
      type: string
      enum:
        - ACTIVE
        - ARCHIVED
    CreateDatasetItemRequest:
      title: CreateDatasetItemRequest
      type: object
      properties:
        datasetName:
          type: string
        input: {}
        expectedOutput:
          nullable: true
      required:
        - datasetName
        - input
    CreateDatasetRunItemRequest:
      title: CreateDatasetRunItemRequest
      type: object
      properties:
        runName:
          type: string
        datasetItemId:
          type: string
        observationId:
          type: string
      required:
        - runName
        - datasetItemId
        - observationId
    CreateDatasetRequest:
      title: CreateDatasetRequest
      type: object
      properties:
        name:
          type: string
      required:
        - name
    UpdateGenerationRequest:
      title: UpdateGenerationRequest
      type: object
      properties:
        generationId:
          type: string
        traceId:
          type: string
          nullable: true
        name:
          type: string
          nullable: true
        endTime:
          type: string
          format: date-time
          nullable: true
        completionStartTime:
          type: string
          format: date-time
          nullable: true
        model:
          type: string
          nullable: true
        modelParameters:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/MapValue'
          nullable: true
        prompt:
          nullable: true
        version:
          type: string
          nullable: true
        metadata:
          nullable: true
        completion:
          nullable: true
        usage:
          $ref: '#/components/schemas/LLMUsage'
          nullable: true
        level:
          $ref: '#/components/schemas/ObservationLevel'
          nullable: true
        statusMessage:
          type: string
          nullable: true
      required:
        - generationId
    IngestionEvent:
      title: IngestionEvent
      oneOf:
        - type: object
          allOf:
            - type: object
              properties:
                type:
                  type: string
                  enum:
                    - trace-create
            - $ref: '#/components/schemas/TraceEvent'
          required:
            - type
        - type: object
          allOf:
            - type: object
              properties:
                type:
                  type: string
                  enum:
                    - score-create
            - $ref: '#/components/schemas/ScoreEvent'
          required:
            - type
        - type: object
          allOf:
            - type: object
              properties:
                type:
                  type: string
                  enum:
                    - observation-create
            - $ref: '#/components/schemas/ObservationCreateEvent'
          required:
            - type
        - type: object
          allOf:
            - type: object
              properties:
                type:
                  type: string
                  enum:
                    - observation-update
            - $ref: '#/components/schemas/ObservationUpdateEvent'
          required:
            - type
    TraceEvent:
      title: TraceEvent
      type: object
      properties:
        id:
          type: string
        timestamp:
          type: string
        body:
          $ref: '#/components/schemas/Trace'
      required:
        - id
        - timestamp
        - body
    ObservationCreateEvent:
      title: ObservationCreateEvent
      type: object
      properties:
        id:
          type: string
        timestamp:
          type: string
        body:
          $ref: '#/components/schemas/Observation'
      required:
        - id
        - timestamp
        - body
    ObservationUpdateEvent:
      title: ObservationUpdateEvent
      type: object
      properties:
        id:
          type: string
        timestamp:
          type: string
        body:
          $ref: '#/components/schemas/Observation'
      required:
        - id
        - timestamp
        - body
    ScoreEvent:
      title: ScoreEvent
      type: object
      properties:
        id:
          type: string
        timestamp:
          type: string
        body:
          $ref: '#/components/schemas/Score'
      required:
        - id
        - timestamp
        - body
    Observations:
      title: Observations
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/Observation'
        meta:
          $ref: '#/components/schemas/utilsMetaResponse'
      required:
        - data
        - meta
    CreateScoreRequest:
      title: CreateScoreRequest
      type: object
      properties:
        id:
          type: string
          nullable: true
        traceId:
          type: string
        name:
          type: string
        value:
          type: number
          format: double
        observationId:
          type: string
          nullable: true
        comment:
          type: string
          nullable: true
      required:
        - traceId
        - name
        - value
    Scores:
      title: Scores
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/Score'
        meta:
          $ref: '#/components/schemas/utilsMetaResponse'
      required:
        - data
        - meta
    UpdateSpanRequest:
      title: UpdateSpanRequest
      type: object
      properties:
        spanId:
          type: string
        traceId:
          type: string
          nullable: true
        endTime:
          type: string
          format: date-time
          nullable: true
        name:
          type: string
          nullable: true
        metadata:
          nullable: true
        input:
          nullable: true
        output:
          nullable: true
        level:
          $ref: '#/components/schemas/ObservationLevel'
          nullable: true
        version:
          type: string
          nullable: true
        statusMessage:
          type: string
          nullable: true
      required:
        - spanId
    CreateTraceRequest:
      title: CreateTraceRequest
      type: object
      properties:
        id:
          type: string
          nullable: true
        name:
          type: string
          nullable: true
        userId:
          type: string
          nullable: true
        externalId:
          type: string
          nullable: true
        release:
          type: string
          nullable: true
        version:
          type: string
          nullable: true
        metadata:
          nullable: true
    Traces:
      title: Traces
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/TraceWithDetails'
        meta:
          $ref: '#/components/schemas/utilsMetaResponse'
      required:
        - data
        - meta
    utilsMetaResponse:
      title: utilsMetaResponse
      type: object
      properties:
        page:
          type: integer
          description: current page number
        limit:
          type: integer
          description: number of items per page
        totalItems:
          type: integer
          description: number of total items given the current filters/selection (if any)
        totalPages:
          type: integer
          description: number of total pages given the current limit
      required:
        - page
        - limit
        - totalItems
        - totalPages
  securitySchemes:
    BasicAuth:
      type: http
      scheme: basic
