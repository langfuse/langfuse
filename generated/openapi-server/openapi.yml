openapi: 3.0.1
info:
  title: langfuse
  version: ''
paths:
  /api/public/events:
    post:
      description: Add an event to the database
      operationId: event_create
      tags:
        - Event
      parameters: []
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Event'
      security: &ref_0
        - BasicAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateEventRequest'
  /api/public/generations:
    post:
      operationId: generations_log
      tags:
        - Generations
      parameters: []
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Log'
      security: *ref_0
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateLog'
  /api/public/scores:
    post:
      description: Add a score to the database
      operationId: score_create
      tags:
        - Score
      parameters: []
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Score'
      security: *ref_0
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateScoreRequest'
  /api/public/spans:
    post:
      description: Add a span to the database
      operationId: span_create
      tags:
        - Span
      parameters: []
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Span'
      security: *ref_0
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateSpanRequest'
    patch:
      description: Update a span to the database
      operationId: span_update
      tags:
        - Span
      parameters: []
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Span'
      security: *ref_0
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateSpanRequest'
  /api/public/traces:
    post:
      description: Add a trace to the database
      operationId: trace_create
      tags:
        - Trace
      parameters: []
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Trace'
      security: *ref_0
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateTraceRequest'
components:
  schemas:
    CreateEventRequest:
      title: CreateEventRequest
      type: object
      properties:
        traceId:
          type: string
        name:
          type: string
        startTime:
          type: string
          format: date-time
        metadata: {}
        parentObservationId:
          type: string
      required:
        - traceId
        - name
        - startTime
        - metadata
    Event:
      title: Event
      type: object
      properties:
        id:
          type: string
        traceId:
          type: string
        type:
          type: string
        name:
          type: string
        startTime:
          type: string
          format: date-time
        metadata: {}
        parentObservationId:
          type: string
      required:
        - id
        - traceId
        - type
        - name
        - startTime
        - metadata
    CreateLog:
      title: CreateLog
      type: object
      properties:
        traceId:
          type: string
        startTime:
          type: string
          format: date-time
        endTime:
          type: string
          format: date-time
        name:
          type: string
        model:
          type: string
        modelParameters:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/MapValue'
        prompt: {}
        metadata: {}
        completion:
          type: string
        usage:
          $ref: '#/components/schemas/LLMUsage'
        parentObservationId:
          type: string
    Log:
      title: Log
      type: object
      properties:
        id:
          type: string
        traceId:
          type: string
        type:
          type: string
        name:
          type: string
        startTime:
          type: string
          format: date-time
        endTime:
          type: string
          format: date-time
        attributes: {}
        parentObservationId:
          type: string
      required:
        - id
        - traceId
        - type
        - attributes
    LLMUsage:
      title: LLMUsage
      type: object
      properties:
        promptTokens:
          type: integer
        completionTokens:
          type: integer
    MapValue:
      title: MapValue
      oneOf:
        - type: string
        - type: integer
        - type: boolean
    CreateScoreRequest:
      title: CreateScoreRequest
      type: object
      properties:
        traceId:
          type: string
        name:
          type: string
        value:
          type: integer
        observationId:
          type: string
      required:
        - traceId
        - name
        - value
    Score:
      title: Score
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        value:
          type: integer
        observationId:
          type: string
        timestamp:
          type: string
          format: date-time
      required:
        - id
        - name
        - value
        - timestamp
    CreateSpanRequest:
      title: CreateSpanRequest
      type: object
      properties:
        traceId:
          type: string
        name:
          type: string
        startTime:
          type: string
          format: date-time
        endTime:
          type: string
          format: date-time
        metadata: {}
        parentObservationId:
          type: string
      required:
        - name
        - startTime
        - metadata
    UpdateSpanRequest:
      title: UpdateSpanRequest
      type: object
      properties:
        spanId:
          type: string
        endTime:
          type: string
          format: date-time
      required:
        - spanId
        - endTime
    Span:
      title: Span
      type: object
      properties:
        id:
          type: string
        traceId:
          type: string
        type:
          type: string
        name:
          type: string
        startTime:
          type: string
          format: date-time
        endTime:
          type: string
          format: date-time
        metadata: {}
        parentObservationId:
          type: string
      required:
        - id
        - traceId
        - type
        - name
        - startTime
        - metadata
    CreateTraceRequest:
      title: CreateTraceRequest
      type: object
      properties:
        name:
          type: string
        metadata: {}
      required:
        - name
        - metadata
    Trace:
      title: Trace
      type: object
      properties:
        id:
          type: string
        timestamp:
          type: string
          format: date-time
        name:
          type: string
        metadata: {}
      required:
        - id
        - timestamp
        - name
        - metadata
  securitySchemes:
    BasicAuth:
      type: http
      scheme: basic
